// The sequence a_n is defined by a_1 = 1, and then recursively for n >= 1:
//              a_2n   = 2 a_n
//              a_2n+1 = a_n - 3 a_n+1
// The first ten terms are 1, 2, -5, 4, 17, -10, -17, 8, -47, 34.
// 
// Define S(N) = sum{n=1..N}(a_n).
// You are given S(10) = -13
// Find S(10^12).


#include <iostream>


// Let's examine the first group of values for a_n and S(N):
//      n     a_n     S(n)
//      1       1       1
//      2       2       3
//      3      -5      -2
//      4       4       2
//      5      17      19
//      6     -10       9
//      7     -17      -8
//      8       8       0
//      9     -47     -47
//     10      34     -13
//     11      47      34
//     12     -20      14
//     13      41      55
//     14     -34      21
//     15     -41     -20
//     16      16      -4
//     17     149     145
//     18     -94      51
//     19    -149     -98
//     20      68     -30

// The first thing that pops out is that a_k = k when k = 2^i.  This makes sense from the recursion
// relation, each even term is double its half.  So a_8 = 2 * a_4 = 4 * a_2 = 8 * a_1.
// Next let's look at S(2^i), and extend the series much further:
//      i       n       S(n)
//      0       1         1
//      1       2         3
//      2       4         2
//      3       8         0
//      4      16        -4
//      5      32       -12
//      6      64       -28
//      7     128       -60
//      8     256      -124
//      9     512      -252
// We see that the differences S(n+1) - S(n) grow exponentially: 2, -1, -2, -4, -8, -16, -32, -64, -128,...
// For each i > 0, S(2^i) = 4 - 2^(i-1)

// Now what about the values of S(N) in between powers of 2?
//      S(3) = S(2) + a_3
//           = 3 + (a_1 - 3 a_2)
//           = 3 + 1 - 3*2
//           = -2
//
//      S(4) = S(2) + a_3 + a_4
//           = 3 + (a_1 - 3 a_2) + 2 a_2
//           = 3 + a-1 - a_2
//           = 3 + 1 - 2
//           = 2
//
//      S(5) = S(4) + a_5
//           = 2 + (a_2 - 3 a_3)
//           = 2 + (a_2 - 3 (a_1 - 3 a_2))
//           = 2 + 10*a_2 - 3*a-1
//           = 2 + 10*2 - 3
//           = 19
//
//      S(6) = S(4) + a_5 + a_6
//           = 2 + (a_2 - 3 a_3) + 2 a_3
//           = 2 + a_2 - a_3
//           = 2 + a_2 - (a_1 - 3 a_2)
//           = 2 + 4 a_2 - a_1
//           = 2 + 4*2 - 1
//           = 9
//
//      S(7) = S(4) + a_5 + a_6 + a_7
//           = 2 + (a_2 - 3 a_3) + 2 a_3 + (a_3 - 3 a_4)
//           = 2 + a_2 - 3 a_4
//           = 2 + 1*2 - 3*4
//           = -8
//
//      S(8) = S(4) + a_5 + a_6 + a_7 + a_8
//           = 2 + (a_2 - 3 a_3) + 2 a_3 + (a_3 - 3 a_4) + 2 a_4
//           = 2 + a_2 - a_4
//           = 2 + 2 - 4
//           = 0
//
//      S(9) = S(8) + a_9
//           = 0 + (a_4 - 3 a_5)
//           = 0 + a_4 - 3 (a_2 - 3 a_3)
//           = 0 + a_4 - 3 a_2 + 9 (a_1 - 3 a_2)
//           = 0 + a_4 - 30 a_2 + 9 a_1
//           = 0 + 4 - 30*2 + 9*1
//           = -47
//
//     S(10) = S(8) + a_9 + a_10
//           = 0 + (a_4 - 3 a_5) + 2 a_5
//           = 0 + a_4 - a_5
//           = 0 + a_4 - (a_2 - 3 a_3)
//           = 0 + a_4 - a_2 + 3 (a_1 - 3 a_2)
//           = 0 + a_4 - 10 a_2 + 3 a_1
//           = 0 + 4 - 10*2 - 3*1
//           = -13
//
//     S(11) = S(8) + a_9 + a_10 + a_11
//           = 0 + (a_4 - 3 a-5) + 2 a_5 + (a_5 - 3 a_6)
//           = 0 + a_4 - 3 a_6
//           = 0 + a_4 - 6 a_3
//           = 0 + a_4 - 6 (a_1 - 3 a_2)
//           = 0 + a_4 + 18 a_2 - 6 a_1
//           = 0 + 4 + 18*2 - 6*1
//           = 34
//
//     S(12) = S(8) + a_9 + a_10 + a_11 + a_12
//           = 0 + (a_4 - 3 a-5) + 2 a_5 + (a_5 - 3 a_6) + 2 a_6
//           = 0 + a_4 - a_6
//           = 0 + a_4 - 2 a_3
//           = 0 + a_4 - 2 (a_1 - 3 a_2)
//           = 0 + a_4 + 6 a_2 - 2 a_1
//           = 0 + 4 + 6*2 - 2*1
//           = 14
//
//     S(13) = S(8) + a_9 + a_10 + a_11 + a_12 + a_13
//           = 0 + (a_4 - 3 a-5) + 2 a_5 + (a_5 - 3 a_6) + 2 a_6 + (a_6 - 3 a_7)
//           = 0 + a_4 - 3 a_7
//           = 0 + a_4 - 3 (a_3 - 3 a_4)
//           = 0 + 10 a_4 - 3 a_3
//           = 0 + 10 a_4 - 3 (a1 - 3 a_2)
//           = 0 + 10 a_4 + 9 a_2 - 3 a_1
//           = 0 + 10*4 + 9*2 - 3*1
//           = 5
//
//     S(14) = S(8) + a_9 + a_10 + a_11 + a_12 + a_13 + a_14
//           = 0 + (a_4 - 3 a-5) + 2 a_5 + (a_5 - 3 a_6) + 2 a_6 + (a_6 - 3 a_7) + 2 a_7
//           = a_4 - a_7
//           = 0 + a_4 - (a_3 - 3 a_4)
//           = 0 + 4 a_4 - a_3
//           = 0 + 4 a_4 - (a_1 - 3 a_2)
//           = 0 + 4 a_4 + 3 a_2 - a_1
//           = 0 + 4*4 + 3*2 - 1
//           = 21
// 
//     S(15) = S(8) + a_9 + a_10 + a_11 + a_12 + a_13 + a_14 + a_15
//           = 0 + (a_4 - 3 a-5) + 2 a_5 + (a_5 - 3 a_6) + 2 a_6 + (a_6 - 3 a_7) + 2 a_7 + (a_7 - 3 a_8)
//           = 0 + a_4 - 3 a_8
//           = 0 + 4 - 3*8
//           = -20

// Compare the values of N and the coefficients of the powers of 2:
//      N      binary      a_1     a_2     a_4     a_8    S(N)
//      1       0001        1       0       0       0       1
//      2       0010        2       0       0       0       3
//      3       0011        1      -3       0       0      -2
//      4       0100        1      -1       1       0       2
//      5       0101       -3      10       0       0      19
//      6       0110       -1       4       0       0       9
//      7       0111        1      -3       0       0      -8
//      8       1000        0       1      -1       0       0
//      9       1001        9     -30       1       0     -47
//     10       1010        3     -10       1       0     -13
//     11       1011       -6      18       1       0      34
//     12       1100       -2       6       1       0      14
//     13       1101       -3       9      10       0      55
//     14       1110       -1       3       4       0      21
//     15       1111        0       0       1      -3     -20
//

int main()
{
    std::cout << "Hello World!\n";
}
